#version 400

in vec3 textureCoords;                             // take in texture coordinates.......................
out vec4 out_Color;                                 // output the color of pixel..........................

uniform samplerCube cubeMap;                            // take the cube map1........................
uniform samplerCube cubeMap2;                           // take the cube map2........................
uniform vec3 fogColour;                                  // depends on the color of the sky........................
uniform float blendFactor;                                // factor to blend two cube textures.....................


const float lowerLimit = 0.0;                         //setting lower limit of fog in the sky..................................
const float upperLimit = 5.0;                       //setting upper limit of fog in the sky..................................

void main(void){
    vec4 texture1 = texture(cubeMap, textureCoords);                              //calculate the cube one texture....................
    vec4 texture2 = texture(cubeMap2, textureCoords);                               // same for cube2 texture..........................
    vec4 final_Color =  mix(texture1, texture2, blendFactor);                     //We are using a 3d map instead..................................
    //blend both textures using blendFactor...................
    
    float factor = (textureCoords.y-lowerLimit)/ (upperLimit - lowerLimit);        //Calculate factor of visibility.....................
    factor = clamp(factor, 0.0, 1.0);                                            //clamp factor between 0 and 1................
    //out_Color = mix(vec4(fogColour, 1.0), final_Color, factor);                  //mix the colors using factor..................
    out_Color = final_Color;
}